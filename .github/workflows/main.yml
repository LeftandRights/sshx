name: SSHX Deployment

on:
  workflow_dispatch:

env:
  API_KEY: ${{ secrets.API_KEY }}
  GH_TOKEN: ${{ secrets.GIT_API_TOKEN }}
  GIT_API_TOKEN: ${{ secrets.GIT_API_TOKEN }}
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  ZIP_PASSWD: ${{ secrets.ZIP_PASSWD }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Ngrok Installation and Setup
      run: |
        curl -o ngrok-tar.tgz https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        tar -xvzf ngrok-tar.tgz
        ./ngrok config add-authtoken $API_KEY

    - name: Installing Dependencies
      run: |
        python3 -m pip install flask requests

    - name: Sending Webhook
      run: |
        python3 send_webhook.py

    - name: Deleting Previous Workflow
      run: |
        python3 workflow-delete.py

    - name: Downloading SSHX
      run: |
        curl -sSf https://sshx.io/get | sh
        sleep 5

    - name: Running Local Server
      run: |
        python3 main.py &

    - name: Running Ngrok Tunnel in Background
      run: |
        nohup ./ngrok http --url=yeti-glorious-redbird.ngrok-free.app 5000 > ngrok.log 2>&1 &

    - name: Deleting unnecessary file
      run: |
        rm -rf *

    - name: Restore Previous State (Artifacts)
      run: |
        if gh release view 1 > /dev/null 2>&1; then
            echo "üîΩ Release v1 found. Downloading..."
            gh release download 1
            unzip -P "$ZIP_PASSWD" workspace.zip
            
            xargs -a installed-packages.txt sudo apt-get install -y
            mv flat_folder/* .
            
            rm workspace.zip installed-packages.txt
        else
            echo "‚ö†Ô∏è Release v1 does not exist. Skipping download."
        fi
      
    - name: Instance keep-alive
      run: |
        apt-mark showmanual > /home/runner/.before
        
        SLEEP=$((RANDOM % 1800 + 18000))  # 18000‚Äì19799
        echo "Sleeping for $SLEEP seconds (~$((SLEEP / 60)) minutes)"
        sleep 60

    - name: Cleaning up for next workflow
      run: |
        apt-mark showmanual > /home/runner/.after
        mkdir -p flat_folder && find . -maxdepth 1 -mindepth 1 ! -name 'flat_folder' ! -name '.*' -exec mv -t flat_folder -- {} +
        touch /home/runner/sshx/sshx/installed-packages.txt
        comm -13 /home/runner/.before /home/runner/.after > /home/runner/sshx/sshx/installed-packages.txt
        
    - name: Save Session State (Artifacts)
      run: |
        ZIP_OUTPUT=$(zip --password "$ZIP_PASSWD" -r workspace.zip flat_folder installed-packages.txt 2>&1)
        ZIP_EXIT=$?

        if [ $ZIP_EXIT -ne 0 ]; then
            if echo "$ZIP_OUTPUT" | grep -q "zip error: Nothing to do!"; then
                echo "‚ö†Ô∏è Nothing to zip. Skipping release."
            else
                echo "‚ùå Unexpected zip error:"
                echo "$ZIP_OUTPUT"
                exit 1
            fi
        else
            echo "‚úÖ Zip created successfully. Uploading to release..."
            gh release delete 1 -y || true
            gh release create 1 workspace.zip
        fi
        
    - name: Retrigger Workflow
      env:
        REPO: ${{ github.repository }}

      run: |
        curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GIT_API_TOKEN" \
          https://api.github.com/repos/$REPO/actions/workflows/main.yml/dispatches \
          -d '{"ref":"main"}'
